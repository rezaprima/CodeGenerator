require 'table_parser'
require 'master_generator'

common_composite_type= {
  :status => :boolean,
  :target => :money,
  :amount => :money
}

sub_class1 = {
  :class_name => 'SubClass1', # TODO mestinya autogenerated
  :table_name => 'SUB_CLASS_1',
  :attributes => {
    :subclass1_id_pk => [:number, :primary_key],
    :mainclass_id_pk => [:number, :subtable_reference,'MainClass','intMainClassIdPk'], # TODO mestinya autogenerated
    :current_value => :number,
    :another_value => :number
  }
}

sub_class2 = {
  :class_name => 'SubClass2', # TODO mestinya autogenerated
  :table_name => 'SUB_CLASS_2',
  :attributes => {
    :subclass2_id_pk => [:number, :primary_key],
    :mainclass_id_pk => [:number, :subtable_reference,'MainClass','intMainClassIdPk'], # TODO mestinya autogenerated
    :current_value => :number,
    :another_value => :number
  }
}

main_class = {
  :class_name => 'MainClass',
  :table_name => 'MAIN_CLASS',
  :attributes => {
    :main_class_id_pk => [:number,:primary_key],
    :existing_foreign_id_pk => :number,
    :month => [:number,:lookup,'MONTH'],
    :year => [:number,:lookup,'YEAR'],
    :composite_field_a1 => common_composite_type,
    :composite_field_a3 => common_composite_type,
    :composite_field_a5 => common_composite_type,
    :composite_field_a7 => common_composite_type,
    :composite_field_a10 => common_composite_type,
    :composite_field_b1 => common_composite_type,
    :composite_field_b3 => common_composite_type,
    :composite_field_b5 => common_composite_type,
    :composite_field_b7 => common_composite_type,
    :composite_field_b10 => common_composite_type,
    :composite_field_c1 => common_composite_type,
    :composite_field_c3 => common_composite_type,
    :composite_field_c5 => common_composite_type,
    :composite_field_c7 => common_composite_type,
    :composite_field_c10 => common_composite_type,
    :composite_field_d1 => common_composite_type,
    :composite_field_d3 => common_composite_type,
    :composite_field_d5 => common_composite_type,
    :composite_field_d7 => common_composite_type,
    :composite_field_d10 => common_composite_type,
    :composite_field_e1 => common_composite_type,
    :composite_field_e3 => common_composite_type,
    :composite_field_e5 => common_composite_type,
    :composite_field_e7 => common_composite_type,
    :composite_field_e10 => common_composite_type,
    :composite_field_f1 => common_composite_type,
    :composite_field_f3 => common_composite_type,
    :composite_field_f5 => common_composite_type,
    :composite_field_f7 => common_composite_type,
    :composite_field_f10 => common_composite_type,
    :policy1 => common_composite_type,
    :policy2 => common_composite_type,
    :a_bool_field => :boolean,
    :created => {:by => :number? , :date => :datetime? },
    :updated => {:by => :number? , :date => :datetime? },
    :approved => {:by => :number? , :date => :datetime? },
  },
  :subtables => [sub_class1,sub_class2]
}

table_parser = TableParser.new
generated_class = table_parser.parse(loan_upload_filter)

generators = [DomainClassGenerator, HbmXmlGenerator,
  HibernateDaoGenerator, HibernateDaoInterfaceGenerator,
  SqlGenerator,AspxFormGenerator,ControllerGenerator]

generators.each do |generator_class|
  p generator_class.to_s
  generator = generator_class.new
  generator.write(:prefix_path => "Path/ForAspx",
    :class_name => generated_class.class_name, 
    :table_name => generated_class.table_name,
    :fields => generated_class.fields,
    :ordinary_fields => generated_class.ordinary_fields,
    :references => [],
    :subtables => generated_class.subtables,
    :main_class => generated_class) # FIXME
end
